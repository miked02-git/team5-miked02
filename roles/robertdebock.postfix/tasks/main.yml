---
# tasks file for postfix
- name: install postfix
  package:
    name: "{{ postfix_packages }}"
    state: present
  register: postfix_install_postfix
  until: postfix_install_postfix is succeeded
  retries: 3

- name: create group
  group:
    name: "{{ postfix_group }}"
    state: present

- name: configure postfix (main.cf)
  template:
    src: main.cf.j2
    dest: /etc/postfix/main.cf
    validate: postconf -d -c %s
  notify:
    - restart postfix

- name: configure postfix (master.cf)
  template:
    src: master.cf.j2
    dest: /etc/postfix/master.cf
    validate: postconf -d -c %s
  notify:
    - restart postfix

- name: force all notified handlers to run
  meta: flush_handlers

- name: configure aliases
  lineinfile:
    path: "{{ postfix_alias_path }}"
    regexp: "^{{ item.name }}:"
    line: "{{ item.name }}: {{ item.destination }}"
  when:
    - postfix_aliases is defined
  with_items:
    - "{{ postfix_aliases }}"
  notify:
    - rebuild alias database
    - restart postfix
  loop_control:
    label: "{{ item.name }}"

- name: configure sender_access
  lineinfile:
    path: "{{ postfix_sender_access_path }}"
    regexp: "^{{ item.domain }}"
    line: "{{ item.domain }} {{ item.action }}"
    create: yes
  when:
    - postfix_sender_access is defined
  with_items:
    - "{{ postfix_sender_access }}"
  notify:
    - rebuild sender_access database
    - restart postfix
  loop_control:
    label: "{{ item.domain }}"

- name: configure recipient_access
  lineinfile:
    path: "{{ postfix_recipient_access_path }}"
    regexp: "^{{ item.domain }}"
    line: "{{ item.domain }} {{ item.action }}"
    create: yes
  when:
    - postfix_recipient_access is defined
  with_items:
    - "{{ postfix_recipient_access }}"
  notify:
    - rebuild recipient_access database
    - restart postfix
  loop_control:
    label: "{{ item.domain }}"

- name: force all notified handlers to run
  meta: flush_handlers

- name: set group owner
  file:
    path: "{{ item }}"
    group: "{{ postfix_group }}"
  with_items:
    - /usr/sbin/postqueue
    - /usr/sbin/postdrop
    - /var/spool/postfix/public
    - /var/spool/postfix/maildrop

- name: start and enable postfix
  service:
    name: "{{ postfix_service }}"
    state: started
    enabled: yes
